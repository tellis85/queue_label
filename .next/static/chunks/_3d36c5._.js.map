{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/travisellis/FINAL%20label-generator/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n \nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/travisellis/FINAL%20label-generator/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}"],"names":[],"mappings":";;;;;;;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,SAAS,sKAAgB,IAAI;AAEnC,MAAM,gBAAgB,sKAAgB,OAAO;AAE7C,MAAM,eAAe,sKAAgB,MAAM;AAE3C,MAAM,8BAAgB,8JAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2KACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,8JAAM,UAAU,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,sKAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;0BAER;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,sKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,8JAAM,UAAU,OAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,sKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///Users/travisellis/FINAL%20label-generator/components/label-generator.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Dialog, DialogContent } from '@/components/ui/dialog';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\n\ninterface LabelItem {\n  Brand: string;\n  seriesname: string;\n  colorcode: string;\n  \"Background Template\": string;\n  finish: string;\n  colorname: string;\n  \"Color Code + Color Name\": string;\n  nominalsize_1: string;\n  nominalsize_2: string;\n  nominalsize_3: string;\n}\n\ninterface SizeSelection {\n  [key: string]: boolean;\n}\n\nexport const LabelGenerator = () => {\n  const [labelData, setLabelData] = useState<LabelItem[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const [selectedBrand, setSelectedBrand] = useState('');\n  const [selectedSeries, setSelectedSeries] = useState('');\n  const [selectedColorCode, setSelectedColorCode] = useState('');\n  const [selectedFinish, setSelectedFinish] = useState('');\n  const [selectedSizes, setSelectedSizes] = useState<SizeSelection>({});\n  const [showPrintLayout, setShowPrintLayout] = useState(false);\n\n  useEffect(() => {\n    const loadCSV = async () => {\n      try {\n        const response = await fetch('/data/Reformatted_Data.csv');\n        const csvText = await response.text();\n        const lines = csvText.split('\\n');\n        const parsedData = lines\n          .slice(1)\n          .filter(line => line.trim())\n          .map(line => {\n            const values = line.split(',').map(value => value.trim());\n            return {\n              Brand: values[0] || '',\n              seriesname: values[1] || '',\n              colorcode: values[2] || '',\n              \"Background Template\": values[3] || '',\n              finish: values[4] || '',\n              colorname: values[5] || '',\n              \"Color Code + Color Name\": values[6] || '',\n              nominalsize_1: values[7] || '',\n              nominalsize_2: values[8] || '',\n              nominalsize_3: values[9] || ''\n            } as LabelItem;\n          });\n\n        setLabelData(parsedData);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error loading CSV:', err);\n        setError('Failed to load label data');\n        setLoading(false);\n      }\n    };\n\n    loadCSV();\n  }, []);\n\n  useEffect(() => {\n    setSelectedSizes({});\n  }, [selectedSeries]);\n\n  const getTemplatePath = (templateName: string) => {\n    if (!templateName) return null;\n    const cleanName = templateName.trim();\n    return `/templates/daltile/${cleanName}`;\n  };\n\n  const Label = ({ scale = 1 }) => {\n    const selectedData = labelData.find(item => \n      item.Brand === selectedBrand &&\n      item.seriesname === selectedSeries &&\n      (item.colorcode === selectedColorCode || !selectedColorCode)\n    );\n\n    const templatePath = selectedData ? getTemplatePath(selectedData['Background Template']) : null;\n    \n    const baseWidth = 2 * 96;  // 2 inches at 96 DPI\n    const baseHeight = 3 * 96; // 3 inches at 96 DPI\n\n    const selectedSizesText = Object.entries(selectedSizes)\n      .filter(([_, isSelected]) => isSelected)\n      .map(([size]) => size)\n      .join(', ');\n\n      const textContainerStyle = {\n        position: 'absolute' as const,\n        top: 'calc(2in + 0.25in)', // Added another 0.125in to make it 0.25in total\n        left: 0,\n        right: 0,\n        display: 'flex',\n        flexDirection: 'column' as const,\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        textAlign: 'center' as const,\n      };\n\n    const textStyle = {\n      fontFamily: 'Geometria, Arial, sans-serif',\n      fontSize: `${8 * scale}px`,\n      lineHeight: '1.2',\n      textTransform: 'uppercase' as const,\n      letterSpacing: '0.05em',\n      fontWeight: '500',\n      color: '#000000',\n      margin: '1px 0',\n    };\n\n    return (\n      <div \n        className=\"relative bg-white\"\n        style={{\n          width: `${baseWidth * scale}px`,\n          height: `${baseHeight * scale}px`,\n        }}\n      >\n        {templatePath && (\n          <img \n            src={templatePath}\n            alt=\"Label Template\"\n            className=\"w-full h-full object-contain\"\n            onError={(e: React.SyntheticEvent<HTMLImageElement>) => {\n              console.error('Template load error:', templatePath);\n              e.currentTarget.src = \"/api/placeholder/192/288\";\n            }}\n          />\n        )}\n        \n        <div style={textContainerStyle}>\n          {selectedData && selectedColorCode && (\n            <>\n              <div style={textStyle}>\n                {selectedData['Color Code + Color Name']}\n              </div>\n              {selectedFinish && (\n                <div style={textStyle}>\n                  {selectedFinish}\n                </div>\n              )}\n              {selectedSizesText && (\n                <div style={textStyle}>\n                  {selectedSizesText}\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    );\n  };\n  const PrintLayout = () => {\n    return (\n      <div \n        className=\"bg-white\"\n        style={{\n          width: '11in',\n          height: '8.5in',\n          position: 'relative',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}\n      >\n        <div\n          style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(4, 2in)',\n            gridTemplateRows: 'repeat(2, 3in)',\n            gap: '0.25in',\n            pageBreakAfter: 'always',\n            pageBreakInside: 'avoid',\n            margin: 0,\n            padding: 0\n          }}\n        >\n          {Array.from({ length: 8 }).map((_, index) => (\n            <div \n              key={index} \n              style={{ \n                width: '2in', \n                height: '3in',\n                pageBreakInside: 'avoid',\n                breakInside: 'avoid'\n              }}\n            >\n              <Label scale={1} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const brands = useMemo(() => [...new Set(labelData.map(item => item.Brand))], [labelData]);\n  \n  const series = useMemo(() => {\n    if (!selectedBrand) return [];\n    return [...new Set(labelData\n      .filter(item => item.Brand === selectedBrand)\n      .map(item => item.seriesname))];\n  }, [selectedBrand, labelData]);\n\n  const colorCodes = useMemo(() => {\n    if (!selectedSeries) return [];\n    return [...new Set(labelData\n      .filter(item => \n        item.Brand === selectedBrand && \n        item.seriesname === selectedSeries)\n      .map(item => ({\n        code: item.colorcode,\n        displayName: item['Color Code + Color Name']\n      })))];\n  }, [selectedBrand, selectedSeries, labelData]);\n\n  const finishes = useMemo(() => {\n    if (!selectedSeries) return [];\n    return [...new Set(labelData\n      .filter(item => \n        item.Brand === selectedBrand && \n        item.seriesname === selectedSeries &&\n        item.colorcode === selectedColorCode\n      )\n      .map(item => item.finish))]\n      .filter(finish => finish && finish !== \"NULL\");\n  }, [selectedBrand, selectedSeries, selectedColorCode, labelData]);\n\n  const availableSizes = useMemo(() => {\n    if (!selectedSeries) return [];\n    \n    const sizes = new Set<string>();\n    labelData\n      .filter(item => \n        item.Brand === selectedBrand && \n        item.seriesname === selectedSeries &&\n        item.colorcode === selectedColorCode\n      )\n      .forEach(item => {\n        ['nominalsize_1', 'nominalsize_2', 'nominalsize_3'].forEach(sizeKey => {\n          if (item[sizeKey as keyof LabelItem] && item[sizeKey as keyof LabelItem] !== '') {\n            sizes.add(item[sizeKey as keyof LabelItem]);\n          }\n        });\n      });\n    \n    return Array.from(sizes).sort();\n  }, [selectedBrand, selectedSeries, selectedColorCode, labelData]);\n\n  const handleGeneratePDF = async () => {\n    const printLayout = document.getElementById('print-layout');\n    if (!printLayout) return;\n\n    try {\n      const width = 11 * 96;\n      const height = 8.5 * 96;\n\n      const canvas = await html2canvas(printLayout, {\n        scale: 4,\n        useCORS: true,\n        logging: false,\n        width: width,\n        height: height,\n        backgroundColor: '#ffffff',\n        windowWidth: width,\n        windowHeight: height,\n        x: 0,\n        y: 0,\n        scrollX: 0,\n        scrollY: 0\n      });\n\n      const pdf = new jsPDF({\n        orientation: 'landscape',\n        unit: 'in',\n        format: [11, 8.5]\n      });\n\n      const imgData = canvas.toDataURL('image/png', 1.0);\n      pdf.addImage(imgData, 'PNG', 0, 0, 11, 8.5, undefined, 'FAST');\n      pdf.save('labels.pdf');\n    } catch (err) {\n      console.error('Error generating PDF:', err);\n      alert('Failed to generate PDF. Please try again.');\n    }\n  };\n\n  if (loading) {\n    return <div className=\"p-8 text-center\">Loading label data...</div>;\n  }\n\n  if (error) {\n    return <div className=\"p-8 text-center text-red-500\">{error}</div>;\n  }\n\n  return (\n    <div className=\"p-6 max-w-6xl mx-auto\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n        <div className=\"space-y-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Brand</label>\n            <select \n              className=\"w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-gray-900 focus:border-blue-500 focus:ring-2 focus:ring-blue-500\"\n              value={selectedBrand}\n              onChange={(e) => {\n                setSelectedBrand(e.target.value);\n                setSelectedSeries('');\n                setSelectedColorCode('');\n                setSelectedFinish('');\n                setSelectedSizes({});\n              }}\n            >\n              <option value=\"\">Select Brand</option>\n              {brands.map(brand => (\n                <option key={brand} value={brand}>{brand}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Series</label>\n            <select \n              className=\"w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-gray-900 focus:border-blue-500 focus:ring-2 focus:ring-blue-500\"\n              value={selectedSeries}\n              onChange={(e) => {\n                setSelectedSeries(e.target.value);\n                setSelectedColorCode('');\n                setSelectedFinish('');\n                setSelectedSizes({});\n              }}\n              disabled={!selectedBrand}\n            >\n              <option value=\"\">Select Series</option>\n              {series.map(s => (\n                <option key={s} value={s}>{s}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Color</label>\n            <select \n              className=\"w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-gray-900 focus:border-blue-500 focus:ring-2 focus:ring-blue-500\"\n              value={selectedColorCode}\n              onChange={(e) => {\n                setSelectedColorCode(e.target.value);\n                setSelectedFinish('');\n              }}\n              disabled={!selectedSeries}\n            >\n              <option value=\"\">Select Color</option>\n              {colorCodes.map(({ code, displayName }) => (\n                <option key={code} value={code}>{displayName}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Finish</label>\n            <select \n              className=\"w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-gray-900 focus:border-blue-500 focus:ring-2 focus:ring-blue-500\"\n              value={selectedFinish}\n              onChange={(e) => setSelectedFinish(e.target.value)}\n              disabled={!selectedColorCode}\n            >\n              <option value=\"\">Select Finish</option>\n              {finishes.map(finish => (\n                <option key={finish} value={finish}>{finish}</option>\n              ))}\n            </select>\n          </div>\n\n          {availableSizes.length > 0 && (\n            <div className=\"mt-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Available Sizes</label>\n              <div className=\"space-y-2\">\n                {availableSizes.map((size) => (\n                  <div key={size} className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      id={`size-${size}`}\n                      className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                      checked={selectedSizes[size] || false}\n                      onChange={(e) => {\n                        setSelectedSizes(prev => ({\n                          ...prev,\n                          [size]: e.target.checked\n                        }));\n                      }}\n                    />\n                    <label\n                      htmlFor={`size-${size}`}\n                      className=\"ml-2 text-sm text-gray-700\"\n                    >\n                      {size}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"border rounded-lg p-4 bg-white min-h-[384px] flex items-center justify-center\">\n          <Label scale={1} />\n        </div>\n      </div>\n\n      <Dialog open={showPrintLayout} onOpenChange={setShowPrintLayout}>\n        <DialogContent className=\"max-w-[95vw] w-[95vw] max-h-[95vh] overflow-y-auto\">\n          <div id=\"print-layout\" className=\"bg-white flex items-center justify-center\">\n            <PrintLayout />\n          </div>\n          <div className=\"mt-4 flex justify-end gap-2\">\n            <button\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n              onClick={() => setShowPrintLayout(false)}\n            >\n              Close\n            </button>\n            <button\n              className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700\"\n              onClick={handleGeneratePDF}\n            >\n              Download PDF\n            </button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <div className=\"mt-8\">\n        <button\n          className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n          onClick={() => setShowPrintLayout(true)}\n          disabled={!selectedColorCode}\n        >\n          Preview Print Layout\n        </button>\n      </div>\n    </div>\n  );\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 886, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 892, "column": 0}, "map": {"version":3,"sources":["file:///Users/travisellis/FINAL%20label-generator/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { LabelGenerator } from '@/components/label-generator';\n\nexport default function Home() {\n  return (\n    <main className=\"min-h-screen p-4\">\n      <LabelGenerator />\n    </main>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,6LAAC;QAAK,WAAU;kBACd,cAAA,6LAAC,oIAAA,CAAA,iBAAc;;;;;;;;;;AAGrB;KANwB"}},
    {"offset": {"line": 920, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}